plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = "battletowers"
version = project.mod_version + "-" + project.minecraft_version

repositories {
    maven { url 'https://jitpack.io' }
    maven { url = "https://minecraft.curseforge.com/api/maven" }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Configuration Library: Omega Config (https://github.com/Draylar/omega-config)
    modImplementation include("com.github.Draylar.omega-config:omega-config-base:${project.config_version}")

    // Jigsaw Utilities: Structure Helpers (https://github.com/kvverti/structure-helpers)
    modImplementation "com.github.kvverti:structure-helpers:${project.structure_helpers_version}"
    include "com.github.kvverti:structure-helpers:${project.structure_helpers_version}"

    // GeckoLib for boss animations
    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.17:3.0.13:dev'

    // building assistance
    //modImplementation 'com.github.Draylar:staff-of-building:1.2.3-1.16.2'

    // static content for tower manipulation
    modImplementation 'com.github.Draylar:static-content:1.0.2'
    include 'com.github.Draylar:static-content:1.0.2'
    modImplementation ("io.github.cottonmc:StaticData:1.1.2") {
        exclude group: "net.fabricmc.fabric-api"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching('fabric.mod.json') {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

java {
    withSourcesJar()
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}