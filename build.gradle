plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "battletowers"
version = project.mod_version + "-" + project.minecraft_version

repositories {
    maven { url 'https://jitpack.io' }
    maven { url = "https://minecraft.curseforge.com/api/maven" }
    maven { url = 'http://maven.sargunv.s3-website-us-west-2.amazonaws.com/' }
    maven { url 'http://server.bbkr.space:8081/artifactory/libs-release' }

    maven {
        name = 'Earthcomputer Mods'
        url = 'https://dl.bintray.com/earthcomputer/mods'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // spawner fixes
    modCompile 'com.github.Draylar:angerable-patch:1.0.0'
    include 'com.github.Draylar:angerable-patch:1.0.0'

    // cloth & autoconfig
    modCompile "me.shedaniel.cloth:config-2:${project.cloth_version}"
    include "me.shedaniel.cloth:config-2:${project.cloth_version}"
    modCompile "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"
    include "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"

    // structure helpers for advanced jigsaw data
    modImplementation 'com.github.kvverti:structure-helpers:3.0.0'
    include 'com.github.kvverti:structure-helpers:3.0.0'

    // structure assistance
    modImplementation 'net.earthcomputer:libstructure:1.5' // Or the latest version
    include 'net.earthcomputer:libstructure:1.5'

    // building assistance
    modCompile 'com.github.Draylar:staff-of-building:1.2.3-1.16.2'

    // static content
    modImplementation 'com.github.Draylar:static-content:1.0.2'
    include 'com.github.Draylar:static-content:1.0.2'
    modImplementation ("io.github.cottonmc:StaticData:1.1.2") { // ?????????????????????
        exclude group: "net.fabricmc.fabric-api"
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}